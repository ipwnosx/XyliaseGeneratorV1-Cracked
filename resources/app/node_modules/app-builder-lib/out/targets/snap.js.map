{"version":3,"sources":["../../src/targets/snap.ts"],"names":[],"mappings":"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","sourcesContent":["import { Arch, deepAssign, executeAppBuilder, replaceDefault as _replaceDefault, serializeToYaml, toLinuxArchString, InvalidConfigurationError, log } from \"builder-util\"\nimport { asArray } from \"builder-util-runtime\"\nimport { outputFile, readFile } from \"fs-extra-p\"\nimport { safeLoad } from \"js-yaml\"\nimport * as path from \"path\"\nimport * as semver from \"semver\"\nimport { SnapOptions } from \"..\"\nimport { Target } from \"../core\"\nimport { LinuxPackager, toAppImageOrSnapArch } from \"../linuxPackager\"\nimport { PlugDescriptor } from \"../options/SnapOptions\"\nimport { getTemplatePath } from \"../util/pathManager\"\nimport { LinuxTargetHelper } from \"./LinuxTargetHelper\"\nimport { createStageDirPath } from \"./targetUtil\"\n\nconst defaultPlugs = [\"desktop\", \"desktop-legacy\", \"home\", \"x11\", \"unity7\", \"browser-support\", \"network\", \"gsettings\", \"pulseaudio\", \"opengl\"]\n\nexport default class SnapTarget extends Target {\n  readonly options: SnapOptions = {...this.packager.platformSpecificBuildOptions, ...(this.packager.config as any)[this.name]}\n\n  public isUseTemplateApp = false\n\n  constructor(name: string, private readonly packager: LinuxPackager, private readonly helper: LinuxTargetHelper, readonly outDir: string) {\n    super(name)\n  }\n\n  private replaceDefault(inList: Array<string> | null | undefined, defaultList: Array<string>) {\n    const result = _replaceDefault(inList, defaultList)\n    if (result !== defaultList) {\n      this.isUseTemplateApp = false\n    }\n    return result\n  }\n\n  private static getDefaultStagePackages() {\n    // libxss1 - was \"error while loading shared libraries: libXss.so.1\" on Xubuntu 16.04\n    // noinspection SpellCheckingInspection\n    return [\"libnspr4\", \"libnss3\", \"libxss1\", \"libappindicator3-1\", \"libsecret-1-0\"]\n  }\n\n  private async createDescriptor(arch: Arch): Promise<any> {\n    if (!this.isElectronVersionGreaterOrEqualThen(\"4.0.0\")) {\n      if (!this.isElectronVersionGreaterOrEqualThen(\"2.0.0-beta.1\")) {\n        throw new InvalidConfigurationError(\"Electron 2 and higher is required to build Snap\")\n      }\n\n      log.warn(\"Electron 4 and higher is highly recommended for Snap\")\n    }\n\n    const appInfo = this.packager.appInfo\n    const snapName = this.packager.executableName.toLowerCase()\n    const options = this.options\n    const linuxArchName = toAppImageOrSnapArch(arch)\n\n    const plugs = normalizePlugConfiguration(this.options.plugs)\n\n    const plugNames = this.replaceDefault(plugs == null ? null : Object.getOwnPropertyNames(plugs), defaultPlugs)\n    const buildPackages = asArray(options.buildPackages)\n    this.isUseTemplateApp = this.options.useTemplateApp !== false && arch === Arch.x64 && buildPackages.length === 0\n\n    const appDescriptor: any = {\n      command: \"command.sh\",\n      plugs: plugNames,\n      adapter: \"none\",\n    }\n\n    const snap: any = safeLoad(await readFile(path.join(getTemplatePath(\"snap\"), \"snapcraft.yaml\"), \"utf-8\"))\n    if (this.isUseTemplateApp) {\n      delete appDescriptor.adapter\n    }\n    if (options.grade != null) {\n      snap.grade = options.grade\n    }\n    if (options.confinement != null) {\n      snap.confinement = options.confinement\n    }\n    deepAssign(snap, {\n      name: snapName,\n      version: appInfo.version,\n      summary: options.summary || appInfo.productName,\n      description: this.helper.getDescription(options),\n      architectures: [toLinuxArchString(arch, true)],\n      apps: {\n        [snapName]: appDescriptor\n      },\n      parts: {\n        app: {\n          \"stage-packages\": this.replaceDefault(options.stagePackages, SnapTarget.getDefaultStagePackages()),\n        }\n      },\n    })\n\n    if (options.confinement === \"classic\") {\n      delete appDescriptor.plugs\n      delete snap.plugs\n    }\n    else {\n      appDescriptor.environment = {\n        TMPDIR: \"$XDG_RUNTIME_DIR\",\n        PATH: \"$SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH\",\n        SNAP_DESKTOP_RUNTIME: \"$SNAP/gnome-platform\",\n        LD_LIBRARY_PATH: [\n          \"$SNAP_LIBRARY_PATH\",\n          \"$SNAP/lib:$SNAP/usr/lib:$SNAP/lib/\" + linuxArchName + \"-linux-gnu:$SNAP/usr/lib/\" + linuxArchName + \"-linux-gnu\",\n          \"$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib\",\n          \"$SNAP/lib/\" + linuxArchName + \"-linux-gnu:$SNAP/usr/lib/\" + linuxArchName + \"-linux-gnu\"\n        ].join(\":\"),\n        ...options.environment,\n      }\n\n      if (plugs != null) {\n        for (const plugName of plugNames) {\n          const plugOptions = plugs[plugName]\n          if (plugOptions == null) {\n            continue\n          }\n\n          snap.plugs[plugName] = plugOptions\n        }\n      }\n    }\n\n    if (buildPackages.length > 0) {\n      snap.parts.app[\"build-packages\"] = buildPackages\n    }\n    if (options.after != null) {\n      snap.parts.app.after = options.after\n    }\n\n    if (options.assumes != null) {\n      snap.assumes = asArray(options.assumes)\n    }\n\n    return snap\n  }\n\n  async build(appOutDir: string, arch: Arch): Promise<any> {\n    const packager = this.packager\n    const options = this.options\n    // tslint:disable-next-line:no-invalid-template-strings\n    const artifactName = packager.expandArtifactNamePattern(this.options, \"snap\", arch, \"${name}_${version}_${arch}.${ext}\", false)\n    const artifactPath = path.join(this.outDir, artifactName)\n    await packager.info.callArtifactBuildStarted({\n      targetPresentableName: \"snap\",\n      file: artifactPath,\n      arch,\n    })\n\n    const snap = await this.createDescriptor(arch)\n    if (this.isUseTemplateApp) {\n      delete snap.parts\n    }\n\n    const stageDir = await createStageDirPath(this, packager, arch)\n    const args = [\n      \"snap\",\n      \"--app\", appOutDir,\n      \"--stage\", stageDir,\n      \"--arch\", toLinuxArchString(arch, true),\n      \"--output\", artifactPath,\n      \"--executable\", this.packager.executableName,\n    ]\n\n    await this.helper.icons\n    if (this.helper.maxIconPath != null) {\n      if (!this.isUseTemplateApp) {\n        snap.icon = \"snap/gui/icon.png\"\n      }\n      args.push(\"--icon\", this.helper.maxIconPath)\n    }\n\n    // snapcraft.yaml inside a snap directory\n    const snapMetaDir = path.join(stageDir, this.isUseTemplateApp ? \"meta\" : \"snap\")\n    const desktopFile = path.join(snapMetaDir, \"gui\", `${snap.name}.desktop`)\n    await this.helper.writeDesktopEntry(this.options, packager.executableName, desktopFile, {\n      // tslint:disable:no-invalid-template-strings\n      Icon: \"${SNAP}/meta/gui/icon.png\"\n    })\n\n    if (this.isElectronVersionGreaterOrEqualThen(\"5.0.0\") && !isBrowserSandboxAllowed(snap)) {\n      args.push(\"--extraAppArgs=--no-sandbox\")\n      if (this.isUseTemplateApp) {\n        args.push(\"--exclude\", \"chrome-sandbox\")\n      }\n    }\n\n    if (packager.packagerOptions.effectiveOptionComputed != null && await packager.packagerOptions.effectiveOptionComputed({snap, desktopFile, args})) {\n      return\n    }\n\n    await outputFile(path.join(snapMetaDir, this.isUseTemplateApp ? \"snap.yaml\" : \"snapcraft.yaml\"), serializeToYaml(snap))\n\n    const hooksDir = await packager.getResource(options.hooks, \"snap-hooks\")\n    if (hooksDir != null) {\n      args.push(\"--hooks\", hooksDir)\n    }\n\n    if (this.isUseTemplateApp) {\n      args.push(\"--template-url\", \"electron4\")\n    }\n    await executeAppBuilder(args)\n\n    await packager.dispatchArtifactCreated(artifactPath, this, arch, packager.computeSafeArtifactName(artifactName, \"snap\", arch, false))\n  }\n\n  private isElectronVersionGreaterOrEqualThen(version: string) {\n    return semver.gte(this.packager.config.electronVersion || \"5.0.3\", version)\n  }\n}\n\nfunction normalizePlugConfiguration(raw: Array<string | PlugDescriptor> | PlugDescriptor | null | undefined): { [key: string]: {[name: string]: any; } | null } | null {\n  if (raw == null) {\n    return null\n  }\n\n  const result: any = {}\n  for (const item of (Array.isArray(raw) ? raw : [raw])) {\n    if (typeof item === \"string\") {\n      result[item] = null\n    }\n    else {\n      Object.assign(result, item)\n    }\n  }\n  return result\n}\n\nfunction isBrowserSandboxAllowed(snap: any): boolean {\n  if (snap.plugs != null) {\n    for (const plugName of Object.keys(snap.plugs)) {\n      const plug = snap.plugs[plugName]\n      if (plug.interface === \"browser-support\" && plug[\"allow-sandbox\"] === true) {\n        return true\n      }\n    }\n  }\n  return false\n}"],"sourceRoot":""}
